group 'org.webonise.restlingtodo'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath('org.akhikhl.gretty:gretty:+')
        classpath 'org.jooq:jooq-codegen:3.5.4'
        classpath 'mysql:mysql-connector-java:5.1.6'
    }

}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.akhikhl.gretty'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations{
    liquibase
    all*.resolutionStrategy {
        force "org.codehaus.groovy:groovy-all:2.4.5"
    }
}
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-simple:1.7.12'
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    compile 'com.google.inject:guice-parent:3.0'
    compile "restling:restling-core:0.0.7"
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-codec:commons-codec:1.10'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    liquibase 'mysql:mysql-connector-java:5.1.6'
    compile 'mysql:mysql-connector-java:5.1.6'
    compile 'org.jooq:jooq:3.6.2'
    compile 'mysql:mysql-connector-java:5.1.6'
    compile 'redis.clients:jedis:2.6.2'
}

gretty {
    servletContainer = 'tomcat8'
    contextPath = ""
}


task generateJooqCode  << {
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.5.0.xsd') {
        jdbc() {
            driver('com.mysql.jdbc.Driver')
            url("jdbc:mysql://localhost:3306/todo_task")
            user("root")
            password("root")
        }
        generator() {
            database() {
                name('org.jooq.util.mysql.MySQLDatabase')
                inputSchema("todo_task")
            }
            generate() {
                deprecated('false')
                pojos('true')
                pojosEqualsAndHashCode('true')
                immutablePojos('false')
            }
            target() {
                packageName("org.webonise.sql")
                directory("src/main/java")
            }
        }
    }

    org.jooq.util.GenerationTool.main(
            javax.xml.bind.JAXB.unmarshal(
                    new StringReader(writer.toString()),
                    org.jooq.util.jaxb.Configuration.class
            )
    )
}


